# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.grpc_protocol import chat_pb2 as src_dot_grpc__protocol_dot_chat__pb2


class ChatServiceStub(object):
    """Main chat service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/chat.ChatService/CreateAccount',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.CreateAccountResponse.FromString,
                )
        self.Authenticate = channel.unary_unary(
                '/chat.ChatService/Authenticate',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.AuthRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.AuthResponse.FromString,
                )
        self.ListAccounts = channel.unary_unary(
                '/chat.ChatService/ListAccounts',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.ListAccountsResponse.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/chat.ChatService/DeleteAccount',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountResponse.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.SendMessageResponse.FromString,
                )
        self.GetMessages = channel.unary_unary(
                '/chat.ChatService/GetMessages',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.GetMessagesResponse.FromString,
                )
        self.MarkRead = channel.unary_unary(
                '/chat.ChatService/MarkRead',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.MarkReadRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.MarkReadResponse.FromString,
                )
        self.DeleteMessages = channel.unary_unary(
                '/chat.ChatService/DeleteMessages',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesResponse.FromString,
                )
        self.GetUnreadCount = channel.unary_unary(
                '/chat.ChatService/GetUnreadCount',
                request_serializer=src_dot_grpc__protocol_dot_chat__pb2.UnreadCountRequest.SerializeToString,
                response_deserializer=src_dot_grpc__protocol_dot_chat__pb2.UnreadCountResponse.FromString,
                )


class ChatServiceServicer(object):
    """Main chat service definition
    """

    def CreateAccount(self, request, context):
        """Account management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Messaging
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnreadCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.CreateAccountRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.CreateAccountResponse.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.AuthRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.AuthResponse.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.ListAccountsRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.ListAccountsResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.SendMessageRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.SendMessageResponse.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.GetMessagesRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.GetMessagesResponse.SerializeToString,
            ),
            'MarkRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkRead,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.MarkReadRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.MarkReadResponse.SerializeToString,
            ),
            'DeleteMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessages,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesResponse.SerializeToString,
            ),
            'GetUnreadCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnreadCount,
                    request_deserializer=src_dot_grpc__protocol_dot_chat__pb2.UnreadCountRequest.FromString,
                    response_serializer=src_dot_grpc__protocol_dot_chat__pb2.UnreadCountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Main chat service definition
    """

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/CreateAccount',
            src_dot_grpc__protocol_dot_chat__pb2.CreateAccountRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.CreateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/Authenticate',
            src_dot_grpc__protocol_dot_chat__pb2.AuthRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ListAccounts',
            src_dot_grpc__protocol_dot_chat__pb2.ListAccountsRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.ListAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/DeleteAccount',
            src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.DeleteAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendMessage',
            src_dot_grpc__protocol_dot_chat__pb2.SendMessageRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetMessages',
            src_dot_grpc__protocol_dot_chat__pb2.GetMessagesRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.GetMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/MarkRead',
            src_dot_grpc__protocol_dot_chat__pb2.MarkReadRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.MarkReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/DeleteMessages',
            src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.DeleteMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnreadCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetUnreadCount',
            src_dot_grpc__protocol_dot_chat__pb2.UnreadCountRequest.SerializeToString,
            src_dot_grpc__protocol_dot_chat__pb2.UnreadCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
